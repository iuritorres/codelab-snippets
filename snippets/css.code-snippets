{
  // Base & Reset Snippets
  "CSS Complete Reset & Boilerplate": {
    "prefix": "!",
    "description": "Complete CSS reset with modern boilerplate (box-sizing, REM system, viewport optimization)",
    "body": [
      "* {",
      "  box-sizing: border-box;",
      "  margin: 0;",
      "  padding: 0;",
      "  outline: 0;",
      "}",
      "",
      "html {",
      "  font-size: 62.5%;",
      "}",
      "",
      "html,",
      "body {",
      "  min-height: 100svh;",
      "  max-width: 100vw;",
      "  overflow-x: hidden;",
      "  text-rendering: optimizeLegibility;",
      "  -webkit-font-smoothing: antialiased;",
      "}",
      "",
      "body {",
      "  font-size: 1.6rem;",
      "}"
    ]
  },
  "CSS Reset - Box Model & Spacing": {
    "prefix": "reset:sizing",
    "description": "Reset margin, padding, outline and set box-sizing to border-box for all elements",
    "body": [
      "* {",
      "  box-sizing: border-box;",
      "  margin: 0;",
      "  padding: 0;",
      "  outline: 0;",
      "}"
    ]
  },
  "CSS Reset - Typography & REM System": {
    "prefix": "reset:font",
    "description": "Setup REM system (62.5% base) with optimized font rendering and 1.6rem body font",
    "body": [
      "html {",
      "  font-size: 62.5%;",
      "}",
      "",
      "html,",
      "body {",
      "  text-rendering: optimizeLegibility;",
      "  -webkit-font-smoothing: antialiased;",
      "}",
      "",
      "body {",
      "  font-size: 1.6rem;",
      "}"
    ]
  },
  "Box Shadow - Subtle Drop Shadow": {
    "prefix": "shadow",
    "description": "Add subtle box shadow with customizable values (default: soft gray shadow)",
    "body": ["box-shadow: ${1:0 2px 4px rgba(0, 0, 0, 0.1)};"]
  },
  "Border Radius - Fully Rounded": {
    "prefix": "rounded",
    "description": "Create perfectly rounded corners (999px radius for pills/buttons)",
    "body": ["border-radius: 999px;"]
  },

  // Flexbox Layout Snippets
  "Flexbox - Complete Container Setup": {
    "prefix": "flex-container",
    "description": "Create complete flex container with all properties (direction, justify, align, gap)",
    "body": [
      ".${1:container} {",
      "  display: flex;",
      "  flex-direction: ${2|row,column,row-reverse,column-reverse,wrap,wrap-reverse|};",
      "  justify-content: ${3|flex-start,flex-end,center,space-between,space-around,space-evenly|};",
      "  align-items: ${4|stretch,flex-start,flex-end,center,basis,start,end|};",
      "  gap: ${5:1rem};",
      "}"
    ]
  },
  "Flexbox - Display Flex": {
    "prefix": "flex",
    "description": "Set element to flex display (enables flexbox layout)",
    "body": ["display: flex;"]
  },
  "Flexbox - Align Items (Cross Axis)": {
    "prefix": "align",
    "description": "Control cross-axis alignment of flex items (vertical in row layout)",
    "body": [
      "align-items: ${1|stretch,flex-start,flex-end,center,basis,start,end|};"
    ]
  },
  "Flexbox - Justify Content (Main Axis)": {
    "prefix": "justify",
    "description": "Control main-axis alignment of flex items (horizontal in row layout)",
    "body": [
      "justify-content: ${1|flex-start,flex-end,center,space-between,space-around,space-evenly|};"
    ]
  },
  "Flexbox - Direction Control": {
    "prefix": "direction",
    "description": "Set the main axis direction of flex container (row, column, reverse)",
    "body": [
      "flex-direction: ${1|row,column,row-reverse,column-reverse,wrap,wrap-reverse|};"
    ]
  },
  "Flexbox - Enable Wrapping": {
    "prefix": "wrap",
    "description": "Allow flex items to wrap to new lines when space is insufficient",
    "body": ["flex-wrap: wrap;"]
  },
  "Flexbox - Disable Wrapping": {
    "prefix": "nowrap",
    "description": "Prevent flex items from wrapping (force single line layout)",
    "body": ["flex-wrap: nowrap;"]
  },
  "Flexbox - Reverse Wrapping": {
    "prefix": "wrap-reverse",
    "description": "Wrap flex items in reverse order (bottom to top)",
    "body": ["flex-wrap: wrap-reverse;"]
  },

  // Responsive Media Queries
  "Media Query - Maximum Width Breakpoint": {
    "prefix": "media-max",
    "description": "Media query for maximum screen width (mobile-first approach)",
    "body": ["@media (max-width: ${1:768px}) {", "  ${0}", "}"]
  },
  "Media Query - Minimum Width Breakpoint": {
    "prefix": "media-min",
    "description": "Media query for minimum screen width (desktop-first approach)",
    "body": ["@media (min-width: ${1:768px}) {", "  ${0}", "}"]
  },
  "Responsive - Mobile Devices": {
    "prefix": "media-mobile",
    "description": "Target mobile devices (up to 768px width)",
    "body": ["@media (max-width: 768px) {", "  ${0}", "}"]
  },
  "Responsive - Tablet Devices": {
    "prefix": "media-tablet",
    "description": "Target tablet devices (769px to 1024px width)",
    "body": [
      "@media (min-width: 769px) and (max-width: 1024px) {",
      "  ${0}",
      "}"
    ]
  },
  "Responsive - Desktop Devices": {
    "prefix": "media-desktop",
    "description": "Target desktop devices (1025px and above width)",
    "body": ["@media (min-width: 1025px) {", "  ${0}", "}"]
  },
  "Orientation - Landscape Mode": {
    "prefix": "media-landscape",
    "description": "Target devices in landscape orientation (width > height)",
    "body": ["@media (orientation: landscape) {", "  ${0}", "}"]
  },
  "Orientation - Portrait Mode": {
    "prefix": "media-portrait",
    "description": "Target devices in portrait orientation (height > width)",
    "body": ["@media (orientation: portrait) {", "  ${0}", "}"]
  },

  // CSS Animations & Transitions
  "Animation - Custom Keyframes": {
    "prefix": "keyframes",
    "description": "Create custom keyframes animation with from/to states (define your own animation)",
    "body": [
      "@keyframes ${1:animation-name} {",
      "  from {",
      "    ${2}",
      "  }",
      "  to {",
      "    ${3}",
      "  }",
      "}"
    ]
  },
  "Animation - Complete Property": {
    "prefix": "animation",
    "description": "Add complete animation property with all parameters (name, duration, easing, etc.)",
    "body": [
      "animation: ${1:animation-name} ${2:duration} ${3:easing} ${4:delay} ${5:iteration-count} ${6:direction};"
    ]
  },
  "Transition - Custom Property": {
    "prefix": "transition",
    "description": "Add smooth transition for specific CSS property with timing control",
    "body": ["transition: ${1:property} ${2:duration} ${3:easing} ${4:delay};"]
  },
  "Transition - All Properties": {
    "prefix": "transition-all",
    "description": "Add transition for all animatable properties (convenient but less performant)",
    "body": ["transition: all ${1:duration} ${2:easing};"]
  },
  "Transition - Quick (150ms)": {
    "prefix": "transition:150",
    "description": "Fast transition for hover effects and micro-interactions (150ms duration)",
    "body": ["transition: all 150ms ease-in-out;"]
  },
  "Transition - Standard (300ms)": {
    "prefix": "transition:300",
    "description": "Standard transition for UI interactions and state changes (300ms duration)",
    "body": ["transition: all 300ms ease-in-out;"]
  },
  "Transition - Slow (500ms)": {
    "prefix": "transition:500",
    "description": "Slow transition for dramatic effects and emphasis (500ms duration)",
    "body": ["transition: all 500ms ease-in-out;"]
  },

  // Pre-Built Animation Effects
  "Animation - Pulse Effect": {
    "prefix": "animate:pulse",
    "description": "Breathing pulse effect - perfect for call-to-action buttons and attention-grabbing",
    "body": [
      "@keyframes pulse {",
      "  0%, 100% {",
      "    transform: scale(1);",
      "  }",
      "  50% {",
      "    transform: scale(1.05);",
      "  }",
      "}",
      "",
      ".pulse {",
      "  animation: pulse 2s infinite;",
      "}"
    ]
  },
  "Animation - Fade In": {
    "prefix": "animate:fade-in",
    "description": "Smooth fade in effect for revealing content and page transitions",
    "body": [
      "@keyframes fadeIn {",
      "  from {",
      "    opacity: 0;",
      "  }",
      "  to {",
      "    opacity: 1;",
      "  }",
      "}",
      "",
      ".fade-in {",
      "  animation: fadeIn 1s ease-in;",
      "}"
    ]
  },
  "Animation - Fade Out": {
    "prefix": "animate:fade-out",
    "description": "Smooth fade out effect for hiding content and element removal",
    "body": [
      "@keyframes fadeOut {",
      "  from {",
      "    opacity: 1;",
      "  }",
      "  to {",
      "    opacity: 0;",
      "  }",
      "}",
      "",
      ".fade-out {",
      "  animation: fadeOut 1s ease-out;",
      "}"
    ]
  },
  "Animation - Slide In": {
    "prefix": "animate:slide-in",
    "description": "Slide in from left with fade - great for mobile menus and sidebar navigation",
    "body": [
      "@keyframes slideIn {",
      "  from {",
      "    transform: translateX(-100%);",
      "    opacity: 0;",
      "  }",
      "  to {",
      "    transform: translateX(0);",
      "    opacity: 1;",
      "  }",
      "}",
      "",
      ".slide-in {",
      "  animation: slideIn 0.5s ease-out;",
      "}"
    ]
  },
  "Animation - Bounce Effect": {
    "prefix": "animate:bounce",
    "description": "Playful bounce effect - ideal for notifications and success messages",
    "body": [
      "@keyframes bounce {",
      "  0%, 20%, 50%, 80%, 100% {",
      "    transform: translateY(0);",
      "  }",
      "  40% {",
      "    transform: translateY(-30px);",
      "  }",
      "  60% {",
      "    transform: translateY(-15px);",
      "  }",
      "}",
      "",
      ".bounce {",
      "  animation: bounce 2s infinite;",
      "}"
    ]
  },
  "Animation - Shake Effect": {
    "prefix": "animate:shake",
    "description": "Attention-grabbing shake effect for error states and form validation",
    "body": [
      "@keyframes shake {",
      "  0% {",
      "    transform: translateX(0);",
      "  }",
      "  25% {",
      "    transform: translateX(-10px);",
      "  }",
      "  50% {",
      "    transform: translateX(10px);",
      "  }",
      "  75% {",
      "    transform: translateX(-10px);",
      "  }",
      "  100% {",
      "    transform: translateX(0);",
      "  }",
      "}",
      "",
      ".shake {",
      "  animation: shake 0.5s ease-in-out;",
      "}"
    ]
  },
  "Animation - Spin Rotation": {
    "prefix": "animate:spin",
    "description": "Continuous rotation animation - perfect for loading spinners and icons",
    "body": [
      "@keyframes spin {",
      "  from {",
      "    transform: rotate(0deg);",
      "  }",
      "  to {",
      "    transform: rotate(360deg);",
      "  }",
      "}",
      "",
      ".spin {",
      "  animation: spin 5s linear infinite;",
      "}"
    ]
  },
  "Animation - Zoom In": {
    "prefix": "animate:zoom-in",
    "description": "Scale up with fade in - great for modal appearances and image previews",
    "body": [
      "@keyframes zoomIn {",
      "  from {",
      "    transform: scale(0.5);",
      "    opacity: 0;",
      "  }",
      "  to {",
      "    transform: scale(1);",
      "    opacity: 1;",
      "  }",
      "}",
      "",
      ".zoom-in {",
      "  animation: zoomIn 0.5s ease-in-out;",
      "}"
    ]
  },
  "Zoom Out Animation": {
    "prefix": "animate:zoom-out",
    "description": "Scale down with fade out - perfect for modal exits",
    "body": [
      "@keyframes zoomOut {",
      "  from {",
      "    transform: scale(1);",
      "    opacity: 1;",
      "  }",
      "  to {",
      "    transform: scale(0.5);",
      "    opacity: 0;",
      "  }",
      "}",
      "",
      ".zoom-out {",
      "  animation: zoomOut 0.5s ease-in-out;",
      "}"
    ]
  },
  "Flip Animation": {
    "prefix": "animate:flip",
    "description": "3D flip effect on Y-axis - cool for card reveals",
    "body": [
      "@keyframes flip {",
      "  from {",
      "    transform: rotateY(0deg);",
      "  }",
      "  to {",
      "    transform: rotateY(180deg);",
      "  }",
      "}",
      "",
      ".flip {",
      "  animation: flip 0.6s ease-in-out;",
      "}"
    ]
  }
}
